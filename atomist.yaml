#
#  Copyright Â© 2019 Atomist, Inc.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#

skill:
  name: "@atomist/demo-sdm"
  version: 0.1.0
  author: Atomist
  description: Atomist SDM for demos
  category:
    - CI/CD
    - demo
  license: Apache-2.0
  homepage: https://github.com/atomist-seeds/demo-sdm
  repository: https://github.com/atomist-seeds/demo-sdm.git
  icon: https://images.atomist.com/logo/atomist-color-mark-medium.png
---
configuration:
  logging:
    level: debug
  policy: ephemeral
  sdm:
    cache:
      enabled: true
    goal:
      timeout: 1200000
---
rules:
  - name: immaterial
    test:
      - not:
          is_material_change:
            directories:
              - .atomist
              - .github
            extensions:
              - java
              - html
              - json
              - yml
              - xml
              - sh
              - kt
              - properties
            files:
              - Dockerfile
    goals:
      - use: lock

  - name: build
    test:
      - has_file: pom.xml
    goals:
      - name: maven version
        containers:
          - args:
              - >-
                v=$(mvn --batch-mode -Dmaven.repo.local=.m2 org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout | cut -d- -f1)-$(date -u +%Y%m%d%H%M%S) &&
                mvn --batch-mode -Dmaven.repo.local=.m2 versions:set -DnewVersion="$v" versions:commit &&
                printf '{"SdmGoal":{"description":"Versioned `%s`","push":{"after":{"version":"%s"}}}}' "$v" "$v" > "$ATOMIST_RESULT"
            command:
              - /bin/bash
              - -c
            image: maven:3.6.3-jdk-8
            name: maven-version
            resources:
              limits:
                cpu: 1000m
                memory: 2048Mi
              requests:
                cpu: 100m
                memory: 1024Mi
            securityContext:
              runAsGroup: 0
              runAsNonRoot: false
              runAsUser: 0
        input:
          - classifier: ${push.repo.owner}/m2
        output:
          - classifier: ${push.repo.owner}/m2
            pattern:
              directory: .m2
          - classifier: ${push.repo.owner}/${push.repo.name}/${push.after.sha}/pom
            pattern:
              globPattern: pom.xml
      - name: maven build
        containers:
          - args:
              - -c
              - mvn --batch-mode -Dmaven.repo.local=.m2 --show-version package
            command:
              - /bin/sh
            image: maven:3.6.3-jdk-8
            name: maven-build
            resources:
              limits:
                cpu: 1000m
                memory: 2048Mi
              requests:
                cpu: 100m
                memory: 1024Mi
            securityContext:
              runAsGroup: 0
              runAsNonRoot: false
              runAsUser: 0
        input:
          - classifier: ${push.repo.owner}/${push.repo.name}/${push.after.sha}/pom
          - classifier: ${push.repo.owner}/m2
        output:
          - classifier: ${push.repo.owner}/m2
            pattern:
              directory: .m2
          - classifier: ${push.repo.owner}/${push.repo.name}/${push.after.sha}/target
            pattern:
              directory: target
      - use: tag

  - name: docker build
    test:
      - has_file: Dockerfile
    depends_on: build
    goals:
      - - name: kaniko
          containers:
            - args:
                - --context=dir:///atm/home
                - --destination=atomistplayground/${push.repo.name}:${push.after.version}
                - --dockerfile=Dockerfile
                - --cache=true
                - --cache-repo=atomistplayground/layer-cache
                - --force
                - --verbosity=info
              image: gcr.io/kaniko-project/executor:v1.5.1
              name: kaniko
              resources:
                limits:
                  cpu: 1000m
                  memory: 2048Mi
                requests:
                  cpu: 100m
                  memory: 1024Mi
              securityContext:
                runAsGroup: 0
                runAsNonRoot: false
                runAsUser: 0
              env:
                - name: "DOCKER_CONFIG"
                  value: "/atm/input/.docker/"
              secrets:
                fileMounts:
                  - mountPath: /atm/input/.docker/config.json
                    value:
                      provider:
                        type: docker
                        names: atomist
          input:
            - classifier: ${push.repo.owner}/${push.repo.name}/${push.after.sha}/pom
            - classifier: ${push.repo.owner}/${push.repo.name}/${push.after.sha}/target
      - name: image link
        containers:
          - args:
              - -c
              - echo '{"SdmGoal":{"push":{"after":{"images":[{"imageName":"gcr.io/atomist-demo-0/${push.repo.name}:${push.after.version}"}]}}}}' > "$ATOMIST_RESULT"
            command:
              - /bin/sh
            image: busybox:1.31.1-uclibc
            name: docker-image-link
            resources:
              limits:
                cpu: 1000m
                memory: 256Mi
              requests:
                cpu: 100m
                memory: 128Mi
            securityContext:
              runAsGroup: 65534
              runAsNonRoot: true
              runAsUser: 65534

  - name: deploy
    test:
      - has_file: Dockerfile
      - is_default_branch
    depends_on: docker build
    goals:
      - use: stagingDeployment
      - use: productionDeployment
